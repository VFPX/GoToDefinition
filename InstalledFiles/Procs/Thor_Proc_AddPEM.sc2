*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="thor_proc_addpem.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "gotodefinition.h"

DEFINE CLASS addpem AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblTitle" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdAddasProperty" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdAddasMethod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdAddasMethod2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtNewName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Baseline1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntDescription.lblDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntDescription.edtDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntDescription.lblnnn255" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Baselabel1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtValue" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Check1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Check2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cmdaddnewpem1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label2" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: addtockl
		*m: cleanup
		*m: getthoroption
		*m: newmethod
		*m: newproperty
		*m: return
		*p: cdescription
		*p: cfoxuserid		&& The FOXUSER ID to save/restore settings to
		*p: cfoxusername		&& The FOXUSER NAME to save/restore settings to
		*p: cmethodtext
		*p: cnewname
		*p: cpemtype
		*p: cvalue
		*p: laccess
		*p: laskaddpem
		*p: lassign
		*p: lrefreshgrid
		*p: lreturnvalue
		*p: lstayopen
		*p: nresult
		*p: oprefs
		*p: osettings
		*p: otools
		*p: otopofform
		*p: otopoffrom
		*p: outils
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		BindControls = .F.
		Caption = "Add New PEM?"
		cdescription = 
		cfoxuserid = AddNew2
		cfoxusername = AddNew2
		cmethodtext = 
		cnewname = 
		cpemtype = 
		cvalue = 
		DoCreate = .T.
		FontSize = 9
		Height = 280
		laccess = .F.
		laskaddpem = .T.
		lassign = .F.
		Left = 0
		lrefreshgrid = .F.
		lreturnvalue = .F.
		lstayopen = .F.
		MinHeight = 280
		MinWidth = 302
		Name = "AddPEM"
		nresult = 0
		oprefs = .F.
		osettings = .NULL.
		otools = .NULL.
		otopofform = .F.
		otopoffrom = .NULL.
		outils = .NULL.
		Top = 0
		Width = 302
		WindowType = 1
		_memberdata = <VFPData>
			<memberdata name="addtockl" display="AddtoCKL"/>
			<memberdata name="cleanup" display="Cleanup"/>
			<memberdata name="cdescription" display="cDescription"/>
			<memberdata name="cmethodtext" display="cMethodText"/>
			<memberdata name="cpemtype" display="cPEMType"/>
			<memberdata name="cvalue" display="cValue"/>
			<memberdata name="laccess" display="lAccess"/>
			<memberdata name="laskaddpem" display="lAskAddPEM"/>
			<memberdata name="lassign" display="lAssign"/>
			<memberdata name="lrefreshgrid" display="lRefreshGrid"/>
			<memberdata name="lreturnvalue" display="lReturnValue"/>
			<memberdata name="lstayopen" display="lStayOpen"/>
			<memberdata name="otopoffrom" display="oTopOfFrom"/>
			<memberdata name="outils" display="oUtils"/>
			<memberdata name="otools" display="oTools"/>
			<memberdata name="osettings" display="oSettings"/>
		</VFPData>
	*</PropValue>

	ADD OBJECT 'Baselabel1' AS label WITH ;
		Alignment = 1, ;
		AutoSize = .F., ;
		Caption = "\<Value:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 12, ;
		Name = "Baselabel1", ;
		TabIndex = 10, ;
		Top = 32, ;
		Width = 36
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Baseline1' AS line WITH ;
		Anchor = 14, ;
		Height = 0, ;
		Left = 0, ;
		Name = "Baseline1", ;
		Top = 233, ;
		Width = 306
		*< END OBJECT: BaseClass="line" />

	ADD OBJECT 'Check1' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 4, ;
		Caption = "A\<ccess", ;
		ControlSource = "Thisform.lAccess", ;
		Height = 17, ;
		Left = 13, ;
		Name = "Check1", ;
		TabIndex = 7, ;
		Top = 206, ;
		Width = 60
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'Check2' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 4, ;
		Caption = "A\<ssign", ;
		ControlSource = "Thisform.lAssign", ;
		Height = 17, ;
		Left = 83, ;
		Name = "Check2", ;
		TabIndex = 8, ;
		Top = 206, ;
		Width = 60
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'cmdAddasMethod' AS commandbutton WITH ;
		Anchor = 4, ;
		AutoSize = .T., ;
		Caption = "Add \<Method", ;
		Left = 90, ;
		Name = "cmdAddasMethod", ;
		TabIndex = 3, ;
		Top = 237
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdAddasMethod2' AS commandbutton WITH ;
		Anchor = 4, ;
		AutoSize = .T., ;
		Caption = "Add/\<Edit Method", ;
		Left = 184, ;
		Name = "cmdAddasMethod2", ;
		TabIndex = 2, ;
		Top = 237
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdAddasProperty' AS commandbutton WITH ;
		Anchor = 4, ;
		AutoSize = .T., ;
		Caption = "Add \<Prop.", ;
		Default = .T., ;
		Height = 27, ;
		Left = 7, ;
		Name = "cmdAddasProperty", ;
		TabIndex = 1, ;
		Top = 237, ;
		Width = 71
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Cmdaddnewpem1' AS commandbutton WITH ;
		Anchor = 4, ;
		AutoSize = .T., ;
		Caption = "Do \<Not Add", ;
		Left = 170, ;
		Name = "Cmdaddnewpem1", ;
		TabIndex = 2, ;
		Top = 203
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cntDescription' AS container WITH ;
		Anchor = 15, ;
		Height = 114, ;
		Left = 12, ;
		Name = "cntDescription", ;
		TabIndex = 6, ;
		Top = 87, ;
		Width = 278, ;
		ZOrderSet = 20
		*< END OBJECT: BaseClass="container" />

	ADD OBJECT 'cntDescription.edtDescription' AS editbox WITH ;
		Anchor = 15, ;
		Height = 95, ;
		IntegralHeight = .F., ;
		Left = 0, ;
		Name = "edtDescription", ;
		SelectOnEntry = .F., ;
		TabIndex = 14, ;
		Top = 16, ;
		Width = 278, ;
		ZOrderSet = 9
		*< END OBJECT: BaseClass="editbox" />

	ADD OBJECT 'cntDescription.lblDescription' AS label WITH ;
		Caption = "\<Description", ;
		Left = 3, ;
		Name = "lblDescription", ;
		TabIndex = 13, ;
		Top = 1, ;
		ZOrderSet = 8
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'cntDescription.lblnnn255' AS label WITH ;
		Caption = "0/254", ;
		Height = 16, ;
		Left = 165, ;
		Name = "lblnnn255", ;
		TabIndex = 13, ;
		Top = 1, ;
		Width = 29, ;
		ZOrderSet = 8
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label2' AS label WITH ;
		Alignment = 0, ;
		Anchor = 14, ;
		Caption = "Label2", ;
		FontSize = 8, ;
		Height = 17, ;
		Left = 14, ;
		Name = "Label2", ;
		Top = 265, ;
		Width = 283
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblTitle' AS label WITH ;
		Alignment = 1, ;
		AutoSize = .F., ;
		Caption = "\<Name:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 10, ;
		Name = "lblTitle", ;
		TabIndex = 9, ;
		Top = 12, ;
		Width = 36
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'txtNewName' AS textbox WITH ;
		Anchor = 10, ;
		ControlSource = "Thisform.cNewName", ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		Height = 22, ;
		Left = 49, ;
		Name = "txtNewName", ;
		TabIndex = 4, ;
		Top = 8, ;
		Width = 241
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtValue' AS textbox WITH ;
		Anchor = 10, ;
		ControlSource = "Thisform.cValue", ;
		DisabledForeColor = 0,0,0, ;
		Height = 36, ;
		Left = 12, ;
		Name = "txtValue", ;
		TabIndex = 5, ;
		Top = 47, ;
		Width = 278
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE Activate
		This.oTopOfForm	= This.oUtils.FindTopMostParent()
		This.Refresh()
		
	ENDPROC

	PROCEDURE addtockl
	ENDPROC

	PROCEDURE cleanup
		Lparameters lcName
		
		Local llAddtoCKL, llAutoAddtoCKL, loAddWordstoCKL, loPEMEditor
		
		If Thisform.lRefreshGrid
			loPEMEditor = This.oUtils.oPEMEditor
			If Not Isnull(m.loPEMEditor)
				m.loPEMEditor.RefreshGrid()
				*!* * Removed 2/18/2013 / JRN
				*!* loPEMEditor.SetCurrentObjectProperty (This.otopofform, lcName)
			Endif
		Endif
		
		If Thisform.lStayOpen
			Thisform.cnewname							 = ''
			Thisform.cValue								 = ''
			Thisform.cntDescription.edtDescription.Value = ''
		
			Thisform.lAccess = .F.
			Thisform.lAssign = .F.
		
			Thisform.Refresh()
			Thisform.txtNewName.SetFocus()
		
		Else
			This.lReturnValue = .T.
			This.Release()
		Endif
		
		
	ENDPROC

	PROCEDURE Destroy
		This.oSettings.Save(Thisform)
		This.oSettings = Null
		This.oTools	   = Null
		
	ENDPROC

	PROCEDURE getthoroption
		Lparameters lcThorKey, lcThorTool, lxDefaultValue
		Return Nvl(Execscript (_Screen.cThorDispatcher, 'Get Option=', lcThorKey, lcThorTool), lxDefaultValue)
	ENDPROC

	PROCEDURE Init
		Lparameters lcNewName, llRefreshGrid, lcPEMType, llStayOpen, lcMethodText
		
		Local loSettings
		
		This.MinWidth = This.Width
		
		Execscript(_Screen.cThorDispatcher, 'PEMEditor_StartIDETools')
		This.oUtils		= _oPEMEditor.oUtils
		This.oTopOfForm	= This.oUtils.FindTopMostParent()
		
		Do Case
			Case Empty(m.lcNewName)
				lcNewName = ''
			Case 'P' $ Evl(m.lcPEMType, 'PM')
				This.cValue	= Transform(This.oUtils.GetDefaultValue(m.lcNewName))
		Endcase
		
		DoDefault()
		
		With This
			.oTools	   = Execscript(_Screen.cThorDispatcher, 'Class= tools from pemeditor')	
			.oSettings = Execscript(_Screen.cThorDispatcher, 'Class= ThorFormSettings', 'Add PEM')
			.oSettings.Restore(Thisform, 'Height, Width, Top, Left')
		Endwith
		
		With This
		
			.cNewName	  = m.lcNewName
			.lStayOpen	  = m.llStayOpen
			.cPEMType	  = Evl(m.lcPEMType, 'PM')
			.lRefreshGrid = m.llRefreshGrid
			.cMethodText  = Evl(m.lcMethodText, '')
		
			Do Case
				Case Not 'P' $ .cPEMType
					.Caption = 'Add new method'
				Case Not 'M' $ .cPEMType
					.Caption = 'Add new property'
				Otherwise 
					.Caption = 'Add new property or method'
			Endcase
		
			.BindControls  = .T.
		
			.Refresh()
			
			If Empty(lcNewName)
				This.txtNewName.SetFocus()
			EndIf 
		Endwith
		
	ENDPROC

	PROCEDURE KeyPress
		*** DougHennig 11/03/2008: set KeyPreview to .T. and added this code to close on Esc
		Lparameters tnKeyCode, ;
			tnShiftAltCtrl
		
		Do Case
				*** Esc closes form
			Case tnKeyCode = 27
				Thisform.Release()
		
		Endcase
		
	ENDPROC

	PROCEDURE newmethod
		Lparameters llEditMethod
		
		Local lcDescription, lcNewName, lcType, lxValue
		
		lcNewName	  = Alltrim(Thisform.cNewname)
		lcDescription = Thisform.cDescription
		lcType		  = 'M'
		
		If This.oUtils.CreateNewPEM (lcType, lcNewName, This.cMethodText, This.oTopOfForm, lcDescription)
			If llEditMethod
				This.oUtils.EditLocalMethodCode (This.oUtils.cSourceFileName, This.oTopOfForm, This.oTopOfForm, lcNewName, This.oUtils.lClass)
			Endif
		Endif
		
		If llEditMethod
			Thisform.Cleanup('')
		Else
			Thisform.Cleanup(lcNewName)
		Endif
	ENDPROC

	PROCEDURE newproperty
		Local lcAccessCode, lcAccessName, lcAssignCode, lcAssignName, lcDescription, lcNewName, lcType
		Local lxValue
		
		lcNewName	  = Alltrim(Thisform.cNewname)
		lcDescription = Thisform.cDescription
		lcType		  =  'P'
		
		lxValue	= This.oUtils.Str2Val(This.cValue)
		
		If This.oUtils.CreateNewPEM (lcType, lcNewName, lxValue, This.oTopOfForm, lcDescription)
			If Thisform.lAccess
				lcAccessCode = This.oUtils.GetAccessMethodCode(lcNewName, 'ACCESS')
				lcAccessName = This.oUtils.JustPEM(lcNewName) + '_Access'
				This.oUtils.CreateNewPEM ('M', lcAccessName, lcAccessCode, This.oTopOfForm, '')
			Endif
			If Thisform.lAssign
				lcAssignCode = This.oUtils.GetAccessMethodCode(lcNewName, 'ASSIGN')
				lcAssignName = This.oUtils.JustPEM(lcNewName) + '_Assign'
				This.oUtils.CreateNewPEM ('M', lcAssignName, lcAssignCode, This.oTopOfForm, '')
			Endif
		Endif
		
		Thisform.Cleanup(lcNewName)
		
	ENDPROC

	PROCEDURE return
	ENDPROC

	PROCEDURE Unload
		Return This.lReturnValue 
		
	ENDPROC

	PROCEDURE Check1.Refresh
		This.Enabled = 'P' $ Thisform.cPEMType and not IsNull(Thisform.otopofform)
		
	ENDPROC

	PROCEDURE Check2.Refresh
		This.Enabled = 'P' $ Thisform.cPEMType and not IsNull(Thisform.otopofform)
		
	ENDPROC

	PROCEDURE cmdAddasMethod.Click
		Thisform.NewMethod(.F.)
	ENDPROC

	PROCEDURE cmdAddasMethod.Refresh
		This.Enabled = ('M' $ Thisform.cPEMType) and not IsNull(Thisform.otopofform)
		
	ENDPROC

	PROCEDURE cmdAddasMethod2.Click
		Thisform.NewMethod(.T.)
	ENDPROC

	PROCEDURE cmdAddasMethod2.Refresh
		This.Enabled = ('M' $ Thisform.cPEMType) and not IsNull(Thisform.otopofform)
		
	ENDPROC

	PROCEDURE cmdAddasProperty.Click
		Thisform.NewProperty()
	ENDPROC

	PROCEDURE cmdAddasProperty.Refresh
		This.Enabled = ('P' $ Thisform.cPEMType) and not IsNull(Thisform.otopofform)
		
	ENDPROC

	PROCEDURE Cmdaddnewpem1.Click
		Thisform.lReturnValue = .T.
		Thisform.Release()
		
	ENDPROC

	PROCEDURE Cmdaddnewpem1.Refresh
		This.Visible = Not Thisform.lStayOpen
	ENDPROC

	PROCEDURE cntDescription.edtDescription.InteractiveChange
		Thisform.cDescription = This.Value
		This.Parent.lblnnn255.Refresh()
		DoDefault()
	ENDPROC

	PROCEDURE cntDescription.edtDescription.KeyPress
		lparameters tnKeyCode, ;
			tnShiftAltCtrl
		if tnKeyCode = 13
			nodefault
		else
			*!* ******** JRN Removed 2023-03-11 ********
			*!* dodefault(tnKeyCode, tnShiftAltCtrl)
		endif
		
	ENDPROC

	PROCEDURE cntDescription.edtDescription.Refresh
		This.Enabled = not IsNull(Thisform.otopofform)
		
	ENDPROC

	PROCEDURE cntDescription.lblnnn255.Refresh
		Local lnLength
		With This
			lnLength = Len (Thisform.cDescription)
			.Caption = Transform (lnLength) + [ / 254]
			.Visible = lnLength >= 128
			.FontBold = lnLength >= 200
			.ForeColor = Iif(lnLength <= 254, Rgb(0,0,0), Rgb(255,0,0))
		Endwith
		
	ENDPROC

	PROCEDURE Label2.Init
		This.Caption = VERSION_NUMBER
	ENDPROC

	PROCEDURE txtNewName.Refresh
		*!* ******************** Removed 10/13/2013 ********************
		*!* This.Enabled = Thisform.lStayOpen and not IsNull(Thisform.otopofform)
		This.Enabled = not IsNull(Thisform.otopofform)
		*!* ******************** End of duplicated text ********************
		
		
	ENDPROC

	PROCEDURE txtNewName.Valid
		Thisform.cValue	= Transform(Thisform.oUtils.GetDefaultValue (This.Value))
		thisform.txtvalue.Refresh()
		
	ENDPROC

	PROCEDURE txtValue.Refresh
		This.Enabled = 'P' $ Thisform.cPEMType and not IsNull(Thisform.otopofform)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	*<PropValue>
		DataSource = .NULL.
		Height = 0
		Left = 0
		Name = "Dataenvironment"
		Top = 0
		Width = 0
	*</PropValue>

ENDDEFINE
